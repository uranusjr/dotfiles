PATH='/usr/local/sbin':"$HOME/usr/local/bin":$PATH

PS1='\[\033[0;32m\]\u@\h \[\033[1;34m\]\W $ \[\033[m\]'
if [[ -d "$VIRTUAL_ENV" && -e "$VIRTUAL_ENV/bin/activate" ]]; then
    # venv's activate file.
    VENV=$(pcregrep -o1 'if \[ "x\((.+)\) " != x \] ; then' "$VIRTUAL_ENV/bin/activate")
    # virtualenv's activate file.
    if [[ -z "$VENV" ]]; then
        VENV=$(pcregrep -o1 'PS1="\((.+)\)\$PS1' "$VIRTUAL_ENV/bin/activate")
    fi
    # Wild guess.
    if [[ -z "$VENV" ]]; then
        VENV=$(basename "$VIRTUAL_ENV")
    fi
    PS1="($VENV) $PS1"
fi
export PS1

# Yeah, a lie.
export SHELL='/usr/local/bin/bash'

alias pg_run='pg_ctl start'
alias my_run='mysql.server start'
alias mongo_run='ulimit -n 2048 && mongod --fork --config /usr/local/etc/mongod.conf'
alias redis_run='redis-server /usr/local/etc/redis.conf --daemonize yes'
alias pinknoise='play -t sl -r 8k -c 2 - synth 30:00:00 pinknoise band -n 1200 200 tremolo 20 .1 </dev/zero 2</dev/null'
if [[ -d /usr/local/Cellar/qt5 ]]; then
    alias qmake5="/usr/local/Cellar/qt5/$(ls /usr/local/Cellar/qt5 | tail -n 1)/bin/qmake"
fi

killport() {
    lsof -i TCP:$1 | grep LISTEN | awk '{print $2}' | xargs kill -9
}

set-title() {
    echo -n -e "\033]0;$1\007"
}

mkvenv() {
    VENV_DIR=$1
    if [ -z "$VENV_DIR" ]; then
        VENV_DIR="venv/$(basename $PWD)"
    fi
    echo "Creating venv at $VENV_DIR"
    $(python3 -c "import sys; print(sys.executable)") -m venv $VENV_DIR ${@:2}
    . $VENV_DIR/bin/activate
    pip install --disable-pip-version-check -qU pip setuptools
}

maybesource() {
    if [[ -f "$1" ]]; then
        . "$1"
    fi
}

maybealias() {
    if [[ $(type "$2") ]]; then
        alias $1="$2"
    fi
}

export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

export EDITOR=vim

export AUTOENV_ENV_FILENAME='.autoenv'

for f in $(ls /usr/local/etc/bash_completion.d/*); do
    source "$f"
done
for f in $(ls $HOME/.bash_completions/*.bash); do
    source "$f"
done

export HOMEBREW_NO_AUTO_UPDATE=1

export WORKON_HOME="$HOME/Documents/programming/virtualenvs"
export VIRTUALENVWRAPPER_PYTHON="$HOME/.local/venvs/virtualenvwrapper/bin/python"
export VIRTUALENVWRAPPER_VIRTUALENV="$HOME/.local/venvs/virtualenvwrapper/bin/virtualenv"
if [[ $SHLVL == '1' ]]; then
    maybesource "$HOME/.local/venvs/virtualenvwrapper/bin/virtualenvwrapper.sh"
fi

# export PYENV_ROOT="$HOME/.pyenv"
# if 'which' -s pyenv; then eval "$(pyenv init -)"; fi

PATH="$HOME/Library/PythonUp/bin:$HOME/Library/PythonUp/cmd:$PATH"

if 'which' -s rbenv; then eval "$(rbenv init -)"; fi

PATH="$HOME/.cargo/bin:$PATH"

# Configure Pipsi.
PATH="$HOME/.local/bin:$PATH"

export DOCKERVM=docker-vm
export CUTESHOP_EXTRA_SPEC_SOURCES="$HOME/Documents/programming/misc/cuteshop-private/specs/"
export PIP_REQUIRE_VIRTUALENV='true'  # Disable global pip usage altogether.

maybesource "$HOME/.bash_secrets"

export PIPENV_TIMEOUT=60
export PIPENV_VENV_IN_PROJECT=1
export PIPENV_SHELL_FANCY=1

alias ll='ls -aFhl'
alias la='ls -A'
alias l='ls -CF'

alias gut=git
alias got=git
alias fit=git

if [[ $(type striptnl) ]]; then
    alias pbcopy='striptnl | pbcopy'
fi

maybealias which gwhich
maybealias git hub   # https://hub.github.com
maybealias ssh sshrc # https://github.com/Russell91/sshrc
maybealias nwjs '/Applications/nwjs.app/Contents/MacOS/nwjs'
maybealias subl '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl'

# Pretend these do not exist.
python() {
    PYTHON="$(which python)"
    if [[ "$PYTHON" == /usr/*  ]]; then
        echo "python2 or python3, that is the question" >&2 | echo >/dev/null
    else
        "$PYTHON" "$@"
    fi
}
pip() {
    PIP="$(which pip)"
    if [[ "$PIP" == /usr/* ]]; then
        echo "python2 or python3, that is the question" >&2 | echo >/dev/null
    else
        "$PIP" "$@"
    fi
}

alias ramdisk='diskutil erasevolume HFS+ RAM `hdiutil attach -nomount ram://2097152`' # 1 GB.
alias openran='open "$(ls | gshuf -n 1)"'
alias weather='curl wttr.in/taipei'

export PGDATA=/usr/local/var/postgres

export ANDROID_HOME=/usr/local/opt/android-sdk

export PATH
